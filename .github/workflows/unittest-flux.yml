# This workflow is used to run the unittest of pyiron

name: Unittests-flux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
        - operating-system: ubuntu-latest
          python-version: '3.11'
          label: linux-64-py-3-11-openmpi
          prefix: /Users/runner/miniconda3/envs/my-env
          environment-file: .ci_support/environment-openmpi.yml

        - operating-system: ubuntu-latest
          python-version: '3.11'
          label: linux-64-py-3-11-mich
          prefix: /usr/share/miniconda3/envs/my-env
          environment-file: .ci_support/environment-mpich.yml

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        channels: conda-forge
        miniforge-variant: Mambaforge
        channel-priority: strict
        auto-update-conda: true
        environment-file: ${{ matrix.environment-file }}
    - name: Install flux
      shell: bash -l {0}
      run: mamba install -y flux-core coverage coveralls=3.3.1
    - name: Setup
      shell: bash -l {0}
      run: pip install --no-deps .
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 5
      run: >
        for f in $(ls tests/test_*.py); do
          echo $f;
          if [ $f != "tests/test_flux.py" ]; then
            coverage run --omit pympipool/_version.py -m unittest $f;
          fi
        done
      env:
        OMPI_MCA_plm: 'isolated'
        OMPI_MCA_rmaps_base_oversubscribe: 'yes'
        OMPI_MCA_btl_vader_single_copy_mechanism: 'none'
    - name: Test Flux
      shell: bash -l {0}
      timeout-minutes: 5
      run: >
        flux start
        coverage run --omit pympipool/_version.py -m unittest tests/test_flux.py;
      env:
        OMPI_MCA_plm: 'isolated'
        OMPI_MCA_rmaps_base_oversubscribe: 'yes'
        OMPI_MCA_btl_vader_single_copy_mechanism: 'none'
    - name: Coverage
      if:  matrix.label == 'linux-64-py-3-11-openmpi'
      continue-on-error: True
      shell: bash -l {0}
      run: |
        coverage combine
        coveralls
        coverage xml
