# This workflow is used to run the unittest of pyiron

name: Benchmark

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        include:
        - operating-system: ubuntu-latest
          python-version: '3.12'
          label: linux-64-py-3-12-openmpi
          prefix: /Users/runner/miniconda3/envs/my-env
          environment-file: .ci_support/environment-openmpi.yml

        - operating-system: ubuntu-latest
          python-version: '3.12'
          label: linux-64-py-3-12-mpich
          prefix: /usr/share/miniconda3/envs/my-env
          environment-file: .ci_support/environment-mpich.yml

    steps:
    - uses: actions/checkout@v2
    - uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        channels: conda-forge
        miniforge-variant: Mambaforge
        channel-priority: strict
        auto-update-conda: true
        environment-file: ${{ matrix.environment-file }}
    - name: Test
      shell: bash -l {0}
      timeout-minutes: 10
      run: |
        pip install versioneer[toml]==0.29
        pip install . --no-deps --no-build-isolation
        python tests/benchmark/llh.py static >> timing.log
        python tests/benchmark/llh.py process >> timing.log
        python tests/benchmark/llh.py thread >> timing.log
        mpiexec -n 4 python -m mpi4py.futures tests/benchmark/llh.py mpi4py >> timing.log
        python tests/benchmark/llh.py pympipool >> timing.log
        cat timing.log
        python -m unittest tests/benchmark/test_results.py
      env:
        OMPI_MCA_plm: 'isolated'
        OMPI_MCA_rmaps_base_oversubscribe: 'yes'
        OMPI_MCA_btl_vader_single_copy_mechanism: 'none'
